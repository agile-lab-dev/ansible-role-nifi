---
- name: Update nifi.properties
  lineinfile:
    path: "{{ nifi_config_dirs.home }}/conf/nifi.properties"
    line: "{{ item.key }}={{ item.value }}"
    regexp: "^{{ item.key }}="
  with_dict: "{{ nifi_properties }}"
  notify: restart_nifi

- name: Update bootstrap.conf
  lineinfile:
    path: "{{ nifi_config_dirs.home }}/conf/bootstrap.conf"
    line: "{{ item.key }}={{ item.value }}"
    regexp: "^{{ item.key }}="
  with_dict: "{{ bootstrap }}"
  notify: restart_nifi

- name: Update nifi-env.sh
  lineinfile:
    path: "{{ nifi_config_dirs.home }}/bin/nifi-env.sh"
    line: "export {{ item.key }}={{ item.value }}"
    regexp: "^export {{ item.key }}="
  with_dict: "{{ nifi_env }}"
  notify: restart_nifi

- name: Update state-management.xml
  xml:
    path: "{{ nifi_config_dirs.home }}/conf/state-management.xml"
    xpath: "{{ item.key }}"
    value: "{{ item.value }}"
    pretty_print: yes
  with_dict: "{{ state_management }}"
  notify: restart_nifi

- name: Update logback.xml
  xml:
    path: "{{ nifi_config_dirs.home }}/conf/logback.xml"
    xpath: "{{ item.key }}"
    value: "{{ item.value }}"
    pretty_print: yes
  with_dict: "{{ logback }}"
  notify: restart_nifi

- name: Update login-identity-providers.xml
  block:
    - name: Seed login-identity-providers.xml
      template:
        src: "templates/login-identity-providers.xml.j2"
        dest: "{{ nifi_config_dirs.home }}/conf/login-identity-providers.xml"
    - name: Add properties to login-identity-providers.xml
      xml:
        path: "{{ nifi_config_dirs.home }}/conf/login-identity-providers.xml"
        xpath: "{{ item.key }}"
        value: "{{ item.value }}"
        pretty_print: yes
      with_dict: "{{ login_identity_providers }}"
      notify: restart_nifi
  when: login_identity_providers | length

- name: Update authorizers.xml
  block:
    - name: Seed authorizers.xml
      template:
        src: "templates/authorizers.xml.j2"
        dest: "{{ nifi_config_dirs.home }}/conf/authorizers.xml"
    - name: Add userGroupProvider to authorizers.xml
      xml:
        path: "{{ nifi_config_dirs.home }}/conf/authorizers.xml"
        xpath: "{{ item.key }}"
        value: "{{ item.value }}"
        pretty_print: yes
      with_dict: "{{ authorizers.userGroupProviders }}"
      when: authorizers.userGroupProviders | length
    - name: Add accessPolicyProvider to authorizers.xml
      xml:
        path: "{{ nifi_config_dirs.home }}/conf/authorizers.xml"
        xpath: "{{ item.key }}"
        value: "{{ item.value }}"
        pretty_print: yes
      with_dict: "{{ authorizers.accessPolicyProviders }}"
      when: authorizers.accessPolicyProviders | length
    - name: Add authorizer to authorizers.xml
      xml:
        path: "{{ nifi_config_dirs.home }}/conf/authorizers.xml"
        xpath: "{{ item.key }}"
        value: "{{ item.value }}"
        pretty_print: yes
      with_dict: "{{ authorizers.authorizer }}"
      when: authorizers.authorizer | length
  notify: restart_nifi
  when: authorizers | length


- name: Create zookeeper-jaas.conf
  copy:
    dest: "{{ nifi_config_dirs.home }}/conf/zookeeper-jaas.conf"
    content: |
      Client {
        com.sun.security.auth.module.Krb5LoginModule required
        useKeyTab=true
        keyTab="{{ nifi_properties['nifi.kerberos.service.keytab.location'] }}"
        storeKey=true
        useTicketCache=false
        principal="{{ nifi_kerberos_principal }}";
      };
  when: nifi_zookeeper_cluster

- name: Prepare Zookeeper
  import_tasks: zookeeper.yml
  when:
    - nifi_properties['nifi.state.management.embedded.zookeeper.start'] is defined
    - nifi_properties['nifi.state.management.embedded.zookeeper.start'] | bool
  notify: restart_nifi
